<% if (charts !== undefined && charts.length !== 0) { %>
<h5 class="<%= customColor1 %>-text col s12 center-align">Edit charts</h5>
<br><br>
<ul id="chartsList" class="list-group collection col s12 z-depth-1 grey lighten-4">
    <%
    var chartIdsSorted = Object.keys(charts).sort(function(a,b){return charts[a].position-charts[b].position});
    for (var i = 0; i < chartIdsSorted.length; i++) {
        var chartId = chartIdsSorted[i];
    %>
    <li class="list-group-item collection-item grey lighten-4" id="listElement_<%= chartId %>">
        <div>
            <i class="material-icons left glyphicon-move">drag_handle</i><a href="/plugin/<%= softwareUrl %>/<%= plugin.name %>/#<%= chartId %>"><b><%= charts[chartId].title %></b> (id: <%= chartId %>)</a>
            <a href="javascript:showErrorModal('Not supported', 'Editing existing charts is not supported at the moment!')" class="secondary-content">
                <i class="material-icons" title="Edit chart">build</i>
            </a>
            <% if (charts[chartId].isDefault) { %>
            <a class="secondary-content">
                <i class="material-icons grey-text" title="Delete chart">delete</i>&nbsp;&nbsp; <!-- Webdesign like a pro -->
            </a>
            <% } else { %>
            <a href="javascript:deleteChart('<%= chartId %>')" class="secondary-content">
                <i class="material-icons red-text" title="Delete chart">delete</i>&nbsp;&nbsp; <!-- Webdesign like a pro -->
            </a>
            <% } %>
        </div>
    </li>
    <% } %>
</ul>

<script src="//cdnjs.cloudflare.com/ajax/libs/Sortable/1.4.2/Sortable.min.js"></script>
<script type="application/javascript">
    function deleteChart(chartId) {
        // TODO use a modal for the confirmation, because it's fancy
        if (confirm("Are you sure you want to delete the chart with id " + chartId)) {
            $.post(window.location.pathname, {
                action: 'deleteChart',
                chartId: chartId
            }).done(function(data) {
                $('#listElement_' + chartId).remove();
            }).fail(function(err) {
                    if (err.responseJSON.error === undefined) {
                        showErrorModal('Ooops', 'Something happened, which should not happen. Please report this bug.');
                    } else {
                        showErrorModal('Error', err.responseJSON.error + '.');
                    }
                    console.log(err);
                }
            );
        }
    }

    Sortable.create(chartsList, {
        animation: 150,
        handle: '.glyphicon-move',
        onEnd: function (event) {
            if (event.oldIndex === event.newIndex) {
                return;
            }
            if (event.oldIndex === undefined || event.newIndex === undefined) {
                return;
            }
            console.log('Moved chart from ' + event.oldIndex + ' to ' + event.newIndex);
            $.post(window.location.pathname, {
                action: 'reorderCharts',
                oldIndex: event.oldIndex,
                newIndex: event.newIndex
            });
        }
    });
</script>
<% } %>